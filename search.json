[{"path":"https://moritzshore.github.io/rswap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Moritz Shore. Author, maintainer.","code":""},{"path":"https://moritzshore.github.io/rswap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shore M (2023). rswap - R interface SWAP model. doi:10.5281/zenodo.7795152, R package version 0.3.4, https://moritzshore.github.io/rswap/.","code":"@Manual{,   author = {Moritz Shore},   title = {rswap - an R interface for the SWAP model},   year = {2023},   note = {R package version 0.3.4},   doi = {10.5281/zenodo.7795152},   url = {https://moritzshore.github.io/rswap/}, }"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"rswap-","dir":"","previous_headings":"","what":"an R interface for the SWAP model","title":"an R interface for the SWAP model","text":"rswap R-package designed help interface work SWAP4.2 [1]. consists variety functions assist user otherwise tedious repetitive tasks. designed fully interoperable / backwards compatible base SWAP4.2 setup. scope package hopefully expanded overtime include autocalibration / PEST integration, scenario runs, much . DISCLAIMER: rswap much development, therefore robustly tested, extremely stable. use risk, critical results, now..","code":""},{"path":"https://moritzshore.github.io/rswap/index.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"an R interface for the SWAP model","text":"Installing rswap Running SWAP Accessing data Visuals Model Performance Saving model runs Comparing model runs Modification Parameters Sensitivity Analysis SWAPtools Integration Miscellaneous functions Support Contributing Acknowledgements References","code":""},{"path":"https://moritzshore.github.io/rswap/index.html","id":"installing-rswap-","dir":"","previous_headings":"","what":"Installing rswap","title":"an R interface for the SWAP model","text":"can install rswap GitHub: useful place start rswap_init() function. function creates “Hupselbrook” example case directory swap.exe. goes run setup, copy observed data template file, plot results. function finished successfully, know rswap working properly. Note, rswap works SWAP’s latest version: 4.2 Hint: can use project_path run following example code page! ⚠️IMPORTANT⚠️ important know rswap never modifies files project directory (project_path) unless stated otherwise. Instead files copied project_path project_path/rswap, modified , executed. results stored well overwritten time. Remember save results like keep (save_swap_run(), write_swap_file()), remember anything project_path/rswap directory temporary!","code":"# install remotes, if not already present install.packages(\"remotes\")  remotes::install_github(repo = \"moritzshore/rswap\", ref = remotes::github_release())  library(rswap) project_path <- rswap_init(swap_exe = \"C:/path/to/swap.exe\")"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"running-swap-","dir":"","previous_headings":"","what":"Running SWAP","title":"an R interface for the SWAP model","text":"SWAP model can run using run_swap() function. needs know model setup located (project_path). swap.exe must located parent directory project_path! run_swap() can customized following parameters: swap_file can set custom name SWAP main file (*.swp) autoset_output can enabled (recomended), output SWAP model matches provided observed data timeout sets max allowed runtime SWAP force forces rebuild rswap project source files (WIP) verbose Prints everything function console pretty colors","code":"run_swap(project_path, autoset_output = TRUE)"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"in-parallel","dir":"","previous_headings":"Running SWAP","what":"In parallel?","title":"an R interface for the SWAP model","text":"pass one project path, projects run parallel using run_swap_parallel() function. Using dedicated function give finer control parallelized parameters.","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/index.html","id":"modelled-data","dir":"","previous_headings":"Accessing Data","what":"Modelled Data","title":"an R interface for the SWAP model","text":"read output executed SWAP run, can use following command: load_swap_output() returns two dataframes, daily_output contains depth wise values various variables. custom_depth contains custom variables custom depths either explicitly altered user, automatically parsed autoset_output flag run_swap(). dataframe used widely throughout package. (/results added time)","code":"modelled_data <- load_swap_output(project_path)"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"observed-data","dir":"","previous_headings":"Accessing Data","what":"Observed Data","title":"an R interface for the SWAP model","text":"rswap heavily revolves around calibration, observed data high importance. running build_rswap_directory() template observed file copied project_directory (already existing). user fill file appropriate data column names. Documentation companion text file. load observed file, can use following command: return dataframe user-entered observed data find observed variables , well depths, can use: ..can also filtered specific variable passing variable","code":"observed_data <- load_swap_observed(project_path) get_swap_variables(observed_data)  get_swap_depths(observed_data)"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"visuals-","dir":"","previous_headings":"","what":"Visuals","title":"an R interface for the SWAP model","text":"variety functions used visualize SWAP data, rswap_plot_variable() rswap_plot_variable() can passed variable, well vector depth.   detailed look multiple variables , can use rswap_plot_multi() function can passed 3 variables, display interactively plot. observed data available, displayed well.","code":"rswap_plot_variable(project_path, variable = \"WC\", depth = c(15, 40, 70)) rswap_plot_multi(project_path, vars = c(\"H\", \"WC\", \"DRAINAGE\"))"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"model-performance-","dir":"","previous_headings":"","what":"Model Performance","title":"an R interface for the SWAP model","text":"functions focus assessing model performance comparing modelling values user provided observed values. functionality based get_swap_performance() function: function flexible can passed number variables, depths, performance indicators stat (currently supported select functions package hydroGOF)","code":"get_swap_performance(project_path, stat = \"d\", variable = \"WC\", depth = 15)"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"saving-runs-","dir":"","previous_headings":"","what":"Saving Runs","title":"an R interface for the SWAP model","text":"calibrating model can useful keep track different model runs different parameterization. rswap aids process variety functions, function saves entire model set directory (project_directory/rswap_saved). model run saved, can compared model runs, following functions.","code":"save_swap_run(project_path, run_name = \"COFRED = 0.35\")"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"comparing-runs-","dir":"","previous_headings":"","what":"Comparing Runs","title":"an R interface for the SWAP model","text":", function quite flexible, can passed available variable depth can compare performance various model runs using rswap_plot_performance() function.   plot equally flexible can passed variable amount depths supported stat.","code":"rswap_plot_compare(project_path, variable = \"WC\", depth = 15) rswap_plot_performance(project_path, stat = \"d\", var = \"WC\", depth = c(15,40,70))"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"modification-of-parameters-","dir":"","previous_headings":"","what":"Modification of Parameters","title":"an R interface for the SWAP model","text":"Changing parameters, tables, vectors SWAP main file can done rswap. simple way using modify_swap_file() function: function many different behaviors depending flags enabled, arguments passed. information, check Details help page function. ⚠️ used incorrectly, function can overwrite swap file! Check Details page! rswap uses whole set functions reading, altering, writing SWAP parameters. modify_swap_file() covers use-cases, underlying functions can use well, advanced work flows. can read documentation.","code":"modify_swap_file(project_path = project_path,   input_file = \"swap.swp\", output_file = \"swap_mod.swp\",   variable = \"ORES\", value = \"0.43\", row = 2)"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"general-parameter-functions","dir":"","previous_headings":"Modification of Parameters","what":"General parameter functions:","title":"an R interface for the SWAP model","text":"","code":"# removes any non-essential data from the input file: clean_swap_file(project_path)  # parses the data to be R-readable: parse_swap_file(project_path)  # writes the SWAP main file sourced from \".csv\" files stored in the rswap directory write_swap_file(project_path, outfile = \"swap_modified.swp\")"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"parameter-specific-functions","dir":"","previous_headings":"Modification of Parameters","what":"Parameter specific functions:","title":"an R interface for the SWAP model","text":"","code":"param <- load_swap_parameters(project_path) param <- change_swap_parameter(param, name = \"SHAPE\", value = \"0.75\") write_swap_parameters(project_path, param)"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"table-specific-functions","dir":"","previous_headings":"Modification of Parameters","what":"Table specific functions:","title":"an R interface for the SWAP model","text":"","code":"tables <- load_swap_tables(project_path) tables <- change_swap_table(tables, variable = \"OSAT\", row = 1, value = \"0.34\") write_swap_tables(project_path, tables)"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"vector-specific-functions","dir":"","previous_headings":"Modification of Parameters","what":"Vector specific functions:","title":"an R interface for the SWAP model","text":"⚠️ choice passing value character format shown , assure FORTRAN compatible format, can use set_swap_format() function, convert value FORTRAN compatible format. run SWAP modifications ’ve made parameters, need make sure write_swap_file() running run_swap() – changes /rswap/ temporary write SWAP file! functionality currently tested SWAP main file. Support SWAP input files coming soon©","code":"vectors <- load_swap_vectors(project_path) vectors <- change_swap_vector(vectors, variable = \"OUTDAT\", index = 1, value = \"10-jun-2013\") write_swap_vectors(project_path, vectors)"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"sensitivity-analysis-","dir":"","previous_headings":"","what":"Sensitivity Analysis","title":"an R interface for the SWAP model","text":"can perform quick sensitivity analysis using rswap using function check_swap_sensitivity() example, like : “wrapper” function uses vectorized behavior modify_swap_file(), run_swap_parallel() get_swap_performance() produce following graph:   Also returned dataframe results. function can adjusted parameter performance statistic. like see model output response varying input, need remove statistic parameter get something like :","code":"check_swap_sensitivity(project_path = \"C:/tetves\", variable = \"OSAT\",                        values = seq(0.32, 0.48, by = 0.01), row = 1,                        statistic = \"NSE\", obs_variable = \"WC\", depth = 15,                         cleanup = TRUE, autoset_output = TRUE, verbose = TRUE)"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"swaptools-integration-","dir":"","previous_headings":"","what":"SWAPtools integration","title":"an R interface for the SWAP model","text":"following features possible using rswap another SWAP-related R-package: SWAPtools get_swap_format() returns format given parameter, whereas set_swap_format() forces value given parameter FORTRAN-required format. functions rely data package SWAPtools. (time, change_swap_par() use automatically protect incorrect formats) functionality implemented time.","code":"get_swap_format(parameters = \"ALTW\") # [1] \"float\"  set_swap_format(parameter = \"ALTW\", value = 5) # [1] \"5.0\""},{"path":"https://moritzshore.github.io/rswap/index.html","id":"miscellaneous-functions-","dir":"","previous_headings":"","what":"Miscellaneous functions","title":"an R interface for the SWAP model","text":"aforementioned functions rely basic general functions , designed internal use, can possibly also assistance end user. listed .","code":"# Load data ob_dat <- load_swap_observed(project_path) mod_dat <- load_swap_output(project_path)  # Filters SWAP data (observed or modelled) by variable and depth mod_filt <- filter_swap_data(data = mod_dat$custom_depth, var = \"WC\", depth = 15) ob_filt <-  filter_swap_data(data = mod_dat$custom_depth, var = \"WC\", depth = 15)  # Filters and Matches dataframe structure of observed and modelled data <- match_swap_data(project_path, variable = \"WC\", depth = 15)  # Melts together all saved runs + current into tidy format melt_swap_runs(project_path, variable = \"WC\", depth = 15)"},{"path":"https://moritzshore.github.io/rswap/index.html","id":"support-and-contributing-","dir":"","previous_headings":"","what":"Support and Contributing","title":"an R interface for the SWAP model","text":"run bugs problems, please open issue. goes suggestions improvement. like contribute project, let know! open towards collaborative improvement. Fork/Branch please :) OPTAIN case-studies use rswap required bake Moritz Shore cake using local recipe case-study country.","code":""},{"path":"https://moritzshore.github.io/rswap/index.html","id":"acknowledgements-","dir":"","previous_headings":"","what":"Acknowledgements","title":"an R interface for the SWAP model","text":"package developed OPTAIN project received funding European Union’s Horizon 2020 research innovation program grant agreement . 862756.","code":""},{"path":"https://moritzshore.github.io/rswap/index.html","id":"references-","dir":"","previous_headings":"","what":"References","title":"an R interface for the SWAP model","text":"[1] Van Dam, J. Field-Scale Water Flow Solute Transport: SWAP Model Concepts, Parameter Estimation, Case Studies. Ph.D. Thesis, Wageningen University, Wageningen, Netherlands, 2000.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://moritzshore.github.io/rswap/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://moritzshore.github.io/rswap/reference/build_rswap_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Build rswap Directory — build_rswap_directory","title":"Build rswap Directory — build_rswap_directory","text":"Makes temporary sub-directory workspace package run SWAP .","code":""},{"path":"https://moritzshore.github.io/rswap/reference/build_rswap_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build rswap Directory — build_rswap_directory","text":"","code":"build_rswap_directory(project_path, force = T, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/build_rswap_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build rswap Directory — build_rswap_directory","text":"project_path path project directory (string) force overwrite existing directory? (flag) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/build_rswap_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build rswap Directory — build_rswap_directory","text":"","code":"# path to sample results (only for package internal example, you don't need # this function) example_path <- system.file(package = \"rswap\", \"extdata/rswap_example_output\")  # in your own projects, you would use something like this: # example_path <- \"C:/path/to/swap_folder/example_project\" # This example code will not be executed as it needs to write files! # build_rswap_directory(example_path, verbose = TRUE)"},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Change SWAP Parameter — change_swap_parameter","title":"Change SWAP Parameter — change_swap_parameter","text":"function changes SWAP parameter. passed parameter dataframe parsed parse_swap_file() well name parameter modified, along value.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change SWAP Parameter — change_swap_parameter","text":"","code":"change_swap_parameter(param, name, value, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change SWAP Parameter — change_swap_parameter","text":"param Parameter set (dataframe) name name parameter change (string) value value parameter take (string) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change SWAP Parameter — change_swap_parameter","text":"function returns dataframe passed, parameter value altered.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_parameter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change SWAP Parameter — change_swap_parameter","text":"Important: function works single parameters. values stored \"tables\" SWAP input file need modified another way (WIP) Note: value parameter passed string correct format (ie. correct decimal place), SWAP/FORTRAN particular ","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Change SWAP Table — change_swap_table","title":"Change SWAP Table — change_swap_table","text":"changes value variable given row SWAP table.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change SWAP Table — change_swap_table","text":"","code":"change_swap_table(table, variable, row, value, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change SWAP Table — change_swap_table","text":"table can one SWAP table, list SWAP tables loaded load_swap_tables(). variable name variable like alter (string) row row like alter (integer) value value like enter (must SWAP-FORTRAN compatible) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change SWAP Table — change_swap_table","text":"Returns table / list tables passed function, desired variable modified given row.","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Change SWAP vector — change_swap_vector","title":"Change SWAP vector — change_swap_vector","text":"Alters SWAP vector given value given index. Can optionally pass list vectors returning load_swap_vectors(), variable name, rswap find right vector ","code":""},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change SWAP vector — change_swap_vector","text":"","code":"change_swap_vector(vector, index, value, variable = NULL, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change SWAP vector — change_swap_vector","text":"vector dataframe vector alter. (Optionally, one can pass list vectors returned load_swap_vectors() also pass variable name) index index vector alter (integer) value value set vector given index (SWAP-FORTRAN compatible) variable optional, required passing list multiple vectors. (string) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change SWAP vector — change_swap_vector","text":"vector vector list passed, modified value","code":""},{"path":"https://moritzshore.github.io/rswap/reference/change_swap_vector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change SWAP vector — change_swap_vector","text":"@seealso load_swap_vectors() change_swap_vector() change_swap_table()","code":""},{"path":"https://moritzshore.github.io/rswap/reference/check_swap_message.html","id":null,"dir":"Reference","previous_headings":"","what":"checks SWAP error message — check_swap_message","title":"checks SWAP error message — check_swap_message","text":"checks SWAP error message","code":""},{"path":"https://moritzshore.github.io/rswap/reference/check_swap_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checks SWAP error message — check_swap_message","text":"","code":"check_swap_message(project_path, swap_file, status, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/check_swap_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity Analysis — check_swap_sensitivity","title":"Sensitivity Analysis — check_swap_sensitivity","text":"function automates simple sensitivity analysis SWAP project. Pass project path, SWAP parameter like vary, well values like vary . pass statistical performance indicator (statistic, supported package hydroGOF) get results terms indicator. pass statistic parameter, get output respect obs_variable. Note: obs_variable present observed data, worries, plot just include observed data.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/check_swap_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity Analysis — check_swap_sensitivity","text":"","code":"check_swap_sensitivity(   project_path,   variable,   values,   row = NULL,   statistic = NULL,   obs_variable = NULL,   depth = NULL,   cleanup = TRUE,   swap_file = \"swap.swp\",   n_cores = NULL,   autoset_output = FALSE,   force = TRUE,   verbose = FALSE,   timeout = Inf )"},{"path":"https://moritzshore.github.io/rswap/reference/check_swap_sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity Analysis — check_swap_sensitivity","text":"project_path path project directory (string) variable SWAP parameter alter (string) values Parameter set vary variable across (vector) row (optional, numeric) parameter stored table need pass row statistic (optional, string) like evaluate sensitivity model performance passed parameter set, please specify statistical indicator like use (supported hydroGOF) obs_variable (optional, string) observed variable like model performance evaluated (required statistic passed) output variable see sensitivity (requires statistic passed) depth (optional, numeric) obs_variable respective depth, pass (cm) cleanup (optional, Boolean) delete model files (results) function completion? swap_file (optional, string) SWAP file run, default \"swap.swp\" n_cores (optional, numeric) number CPU cores run sensitivity analysis . autoset_output (optional, Boolean) Match model output observed data? force (optional, Boolean) rswap directory already exists, new one generated/reloaded unless force=TRUE. Defaults TRUE verbose (optional, Boolean) Print actions console? timeout (optional, numeric) Maximum model run time seconds. Unlimited default.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/check_swap_sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sensitivity Analysis — check_swap_sensitivity","text":"Prints interactive plot returns dataframe results.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/check_swap_sensitivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sensitivity Analysis — check_swap_sensitivity","text":"Note: function robustly tested, please report errors report errors GitHub","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/check_swap_sensitivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sensitivity Analysis — check_swap_sensitivity","text":"","code":"# This function cannot execute example code as it relies on the externally # provided swap model if(FALSE){ exe_path = \"../swap.exe\" path = rswap_init(swap_exe = exe_path) check_swap_sensitivity(project_path = path, variable = \"OSAT\",row = 1, values = seq(0.32, 0.48, by = 0.01), obs_variable = \"WC\", depth = 15, autoset_output = TRUE, verbose = F) }"},{"path":"https://moritzshore.github.io/rswap/reference/clean_swap_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean SWAP File — clean_swap_file","title":"Clean SWAP File — clean_swap_file","text":"Returns cleaned SWAP file fit manipulation (removes non-vital information).","code":""},{"path":"https://moritzshore.github.io/rswap/reference/clean_swap_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean SWAP File — clean_swap_file","text":"","code":"clean_swap_file(project_path, swap_file = \"swap.swp\")"},{"path":"https://moritzshore.github.io/rswap/reference/clean_swap_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean SWAP File — clean_swap_file","text":"project_path path project directory (string) swap_file name swap file (string)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/clean_swap_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean SWAP File — clean_swap_file","text":"Returns cleaned SWAP file string vector form.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/clean_swap_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean SWAP File — clean_swap_file","text":"function designed used internally, may useful end users. currently tested SWAP main file.","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/est_avp.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Actual Vapour Pressure — est_avp","title":"Estimate Actual Vapour Pressure — est_avp","text":"Converts relative humidity (RH) actual vapour pressure (AVP) using estimation maximum minimum temperature. function exists SWAP uses AVP whereas many datasets contain RH. Read fao.org","code":""},{"path":"https://moritzshore.github.io/rswap/reference/est_avp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Actual Vapour Pressure — est_avp","text":"","code":"est_avp(tmin, tmax, rh)"},{"path":"https://moritzshore.github.io/rswap/reference/est_avp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Actual Vapour Pressure — est_avp","text":"tmin numeric vector, Celsius (C) tmax numeric vector, Celsius (C) rh numeric vector, % (ie. 53.2)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/est_avp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Actual Vapour Pressure — est_avp","text":"vector AVP, rounded 2 decimal placews","code":""},{"path":"https://moritzshore.github.io/rswap/reference/est_avp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Actual Vapour Pressure — est_avp","text":"Note: like use hourly AVP, just use value tmin tmax","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/est_avp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Actual Vapour Pressure — est_avp","text":"","code":"est_avp(tmin = c(1.8, 1.9, 2.0), tmax =  c(6, 7, 8),                    rh = c(60.2, 40.5, 90.2)) #> [1] 0.49 0.34 0.80"},{"path":"https://moritzshore.github.io/rswap/reference/filter_swap_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter SWAP Data — filter_swap_data","title":"Filter SWAP Data — filter_swap_data","text":"internal function filters dataframes SWAP data depth variable. might useful end users well, accessible.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/filter_swap_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter SWAP Data — filter_swap_data","text":"","code":"filter_swap_data(data, variable = NULL, depth = NULL)"},{"path":"https://moritzshore.github.io/rswap/reference/filter_swap_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter SWAP Data — filter_swap_data","text":"data given load_observed()$data load_swap_output()$custom_depth (dataframe) variable name(s) variables like select, leave blank . (string) depth value(s) depths like select, leave blank . (numeric)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/filter_swap_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter SWAP Data — filter_swap_data","text":"Returns dataframe DATE column, followed desired data.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/filter_swap_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter SWAP Data — filter_swap_data","text":"","code":"# path to sample results (only for package internal example, you don't need # this function) example_path <- system.file(package = \"rswap\", \"extdata/rswap_example_output\")  # in your own projects, you would use something like this: # example_path <- \"C:/path/to/swap_folder/example_project\"  # load some SWAP data (either observed, or modeled using load_swap_output()) data <- load_swap_observed(project_path = example_path, verbose = TRUE) #> ℹ Observed data already loaded, not reloading. (use force=TRUE to force reload)   filter_swap_data(data, var = \"WC\", depth = \"15\") #> # A tibble: 36 × 2 #>    DATE       WC_15 #>    <date>     <dbl> #>  1 2002-01-31 0.315 #>  2 2002-02-28 0.342 #>  3 2002-03-31 0.287 #>  4 2002-04-30 0.314 #>  5 2002-05-31 0.286 #>  6 2002-06-30 0.244 #>  7 2002-07-31 0.397 #>  8 2002-08-31 0.220 #>  9 2002-09-30 0.210 #> 10 2002-10-31 0.274 #> # ℹ 26 more rows"},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_depths.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Depths — get_swap_depths","title":"Get Depths — get_swap_depths","text":"Extracts numeric depth values found observed data, loaded load_observed(). Can filtered variable.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_depths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Depths — get_swap_depths","text":"","code":"get_swap_depths(data, variable = NULL)"},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_depths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Depths — get_swap_depths","text":"data loaded load_observed() (dataframe) variable returns depths given variable passed. leave blank . (string)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_depths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Depths — get_swap_depths","text":"Returns numeric vector depths","code":""},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_depths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Depths — get_swap_depths","text":"","code":"# path to sample results (only for package internal example, you don't need # this function) example_path <- system.file(package = \"rswap\", \"extdata/rswap_example_output\")  # in your own projects, you would use something like this: # example_path <- \"C:/path/to/swap_folder/example_project\"  # load some SWAP data (either observed, or modeled using load_swap_output()) data <- load_swap_observed(project_path = example_path, verbose = TRUE) #> ℹ Observed data already loaded, not reloading. (use force=TRUE to force reload)   get_swap_depths(data, variable = \"TEMP\") #> [1] 15 40 70"},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Get SWAP Format — get_swap_format","title":"Get SWAP Format — get_swap_format","text":"Gets format SWAP parameter","code":""},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get SWAP Format — get_swap_format","text":"","code":"get_swap_format(parameters)"},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get SWAP Format — get_swap_format","text":"parameters SWAP parameter get format .","code":""},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get SWAP Format — get_swap_format","text":"Returns unit passed SWAP variable string form.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Model Performance — get_swap_performance","title":"Get Model Performance — get_swap_performance","text":"Returns performance chosen variable(s) performance indicator(s). performance indicators sourced form package hydroGOF Supported variables provided observed data file.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Model Performance — get_swap_performance","text":"","code":"get_swap_performance(   project_path,   stat,   archived = FALSE,   variable = NULL,   depth = NULL,   verbose = F )"},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Model Performance — get_swap_performance","text":"project_path path project directory (string) stat statistical performance indicator package hydroGOF (string) archived set TRUE project saved \"rswap_saved/\" (flag) variable variable name. leave blank . (string) depth depth variable depth-wise. leave blank (numeric) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Model Performance — get_swap_performance","text":"dataframe value(s) performance indicator(s) given variable(s) depth(s)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_performance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Model Performance — get_swap_performance","text":"performance indicator result function passed string stat parameter called hydroGOF package. following supported stat: br2 cp d KGE mae md mNSE mse nrmse NSE pbias rd rmse rNSE rPearson rSD rsr ssq VE Please note, passing multiple variables differing depths work! (yet)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get SWAP variables — get_swap_variables","title":"Get SWAP variables — get_swap_variables","text":"Gets SWAP variable names SWAP dataframe used variety rswap functions.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get SWAP variables — get_swap_variables","text":"","code":"get_swap_variables(swap_data, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get SWAP variables — get_swap_variables","text":"swap_data dataframe returned rswap functions. verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/get_swap_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get SWAP variables — get_swap_variables","text":"Returns character vector detected variables","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/install_SWAPtools.html","id":null,"dir":"Reference","previous_headings":"","what":"Install SWAPtools — install_SWAPtools","title":"Install SWAPtools — install_SWAPtools","text":"Installs SWAPtools waterwijzerlandbouw.wur.nl/repo","code":""},{"path":"https://moritzshore.github.io/rswap/reference/install_SWAPtools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install SWAPtools — install_SWAPtools","text":"","code":"install_SWAPtools()"},{"path":"https://moritzshore.github.io/rswap/reference/install_SWAPtools.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install SWAPtools — install_SWAPtools","text":"returns TRUE package already installed, installation successful. returns FALSE installation failed.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_meteo.html","id":null,"dir":"Reference","previous_headings":"","what":"Load SWAP meteo data — load_swap_meteo","title":"Load SWAP meteo data — load_swap_meteo","text":"function loads meteo file rswap_meteo.csv R-environment, allowing modify contents . Descriptions variables units provided .","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_meteo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load SWAP meteo data — load_swap_meteo","text":"","code":"load_swap_meteo(project_path, verbose = FALSE)"},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_meteo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load SWAP meteo data — load_swap_meteo","text":"project_path Path project directory (string) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_meteo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load SWAP meteo data — load_swap_meteo","text":"dataframe meteo data","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_meteo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load SWAP meteo data — load_swap_meteo","text":"NOTE: best \"guess\" units meteo input file . find official definitions manual, use caution let know got anything wrong. Station  –  string, name station, ie. \"'Robert'\" DD       – day month, ie. \"01\" MM       – month number, ie. \"01\" YYYY     – year, ie \"2001\" Rad      – solar radiation, unit  kJ/m^2 ie \"3810.1\" Tmin     – Minimum temperature (daily) degrees Celsius, ie \"-3.2\" Tmax     – Maximum temperature (daily) degrees Celsius, ie. \"5.3\" Hum      – Humidity (kPa?) (See note ) ie. \"0.524\" Wind     – Wind speed (m/s) ie. \"4.5\" Rain     – precipitation, (mm) ie. \"0.2\" ETref    – (optional) Reference Evapotranspiration (mm) ie. \"0.4\" Wet      – (optional) Rain intensity, fraction day 0 1, ie. \"0.029\"","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_meteo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load SWAP meteo data — load_swap_meteo","text":"","code":"#tbc"},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_observed.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Observed Data — load_swap_observed","title":"Load Observed Data — load_swap_observed","text":"function loads observed data template file placed project directory either build_rswap_directory() rswap_init()","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_observed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Observed Data — load_swap_observed","text":"","code":"load_swap_observed(project_path, force = F, archived = F, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_observed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Observed Data — load_swap_observed","text":"project_path Path project directory (string) force Force reload observed data? (flag) archived set true project path saved 'rswap_saved' (flag) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_observed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Observed Data — load_swap_observed","text":"returns dataframe observed data","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_observed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Observed Data — load_swap_observed","text":"critical template observed file filled correctly. Please see file information. located project directory, must bear name swap_observed_data.csv.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_observed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Observed Data — load_swap_observed","text":"","code":"# path to sample results (only for package internal example, you don't need # this function) example_path <- system.file(package = \"rswap\", \"extdata/rswap_example_output\")  # in your own projects, you would use something like this: # example_path <- \"C:/path/to/swap_folder/example_project\"  load_swap_observed(example_path, verbose = TRUE) #> ℹ Observed data already loaded, not reloading. (use force=TRUE to force reload)  #> # A tibble: 36 × 10 #>    DATE         H_15   H_40   H_70 WC_15 WC_40 WC_70 TEMP_15 TEMP_40 TEMP_70 #>    <date>      <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl>   <dbl>   <dbl>   <dbl> #>  1 2002-01-31  -55.1  -26.5  -1.76 0.315 0.367 0.308   12.0     2.53    3.07 #>  2 2002-02-28  -40.5  -14.8   9.26 0.342 0.404 0.308    7.39    1.84    2.53 #>  3 2002-03-31  -73.6  -36.9 -11.1  0.287 0.331 0.298   13.4     2.29    2.60 #>  4 2002-04-30  -55.5  -30.3  -5.62 0.314 0.354 0.305   14.2     2.88    3.56 #>  5 2002-05-31  -74.3  -37.1 -11.3  0.286 0.330 0.297   17.4     3.92    5.11 #>  6 2002-06-30 -115.   -61.3 -31.1  0.244 0.260 0.251   20.6     4.47    5.93 #>  7 2002-07-31  -16.6  -85.0 -49.3  0.397 0.212 0.207   30.8     6.30    7.62 #>  8 2002-08-31 -149.   -86.2 -52.3  0.220 0.210 0.201   22.6     5.39    7.38 #>  9 2002-09-30 -166.  -112.  -74.5  0.210 0.175 0.163   17.1     4.06    5.74 #> 10 2002-10-31  -84.6  -65.1 -55.2  0.274 0.251 0.195    9.79    2.78    4.22 #> # ℹ 26 more rows"},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads SWAP Model Output — load_swap_output","title":"Reads SWAP Model Output — load_swap_output","text":"function reads output SWAP model last run given project_path. can also used read results saved runs \"/rswap_saved\" folder archived set TRUE.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads SWAP Model Output — load_swap_output","text":"","code":"load_swap_output(project_path, archived = F, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads SWAP Model Output — load_swap_output","text":"project_path path project directory (string) archived needs set true reading rswap_saved archive (flag) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads SWAP Model Output — load_swap_output","text":"Returns list dataframes. .$daily_output .$custom_depth","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reads SWAP Model Output — load_swap_output","text":"Currently, function returns data needed rest package, expanded time return SWAP output","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads SWAP Model Output — load_swap_output","text":"","code":"# path to sample results (only for package internal example, you don't need # this function) example_path <- system.file(package = \"rswap\", \"extdata/rswap_example_output\")  # in your own projects, you would use something like this: # example_path <- \"C:/path/to/swap_folder/example_project\"  load_swap_output(example_path) #> $daily_output #> # A tibble: 1,224 × 5 #>    DATE       DEPTH     H    WC  CONC #>    <chr>      <dbl> <dbl> <dbl> <dbl> #>  1 2002-01-31  -0.5 -58.4 0.294  28.2 #>  2 2002-01-31  -1.5 -57.8 0.295  32.1 #>  3 2002-01-31  -2.5 -57.1 0.296  35.1 #>  4 2002-01-31  -3.5 -56.5 0.297  38.0 #>  5 2002-01-31  -4.5 -55.8 0.299  41.3 #>  6 2002-01-31  -5.5 -55.1 0.300  44.9 #>  7 2002-01-31  -6.5 -54.4 0.301  48.8 #>  8 2002-01-31  -7.5 -53.7 0.302  52.5 #>  9 2002-01-31  -8.5 -53.0 0.303  55.9 #> 10 2002-01-31  -9.5 -52.3 0.305  58.9 #> # ℹ 1,214 more rows #>  #> $custom_depth #> # A tibble: 36 × 11 #>    DATE        RAIN   H_15   H_40   H_70 WC_15 WC_40 WC_70 TEMP_15 TEMP_40 #>    <date>     <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl>   <dbl>   <dbl> #>  1 2002-01-31  4.26  -50.1  -28.6  -1.98 0.309 0.328 0.380    8.58    8.17 #>  2 2002-02-28 12.3   -36.8  -16.0  10.4  0.335 0.360 0.38     5.28    5.95 #>  3 2002-03-31  3.56  -66.9  -39.9 -12.4  0.282 0.296 0.368    9.56    7.39 #>  4 2002-04-30  4.21  -50.4  -32.8  -6.32 0.308 0.316 0.377   10.1     9.29 #>  5 2002-05-31  5.29  -67.5  -40.2 -12.7  0.281 0.295 0.367   12.4    12.6  #>  6 2002-06-30  4.89 -105.   -66.3 -35.0  0.239 0.232 0.310   14.7    14.4  #>  7 2002-07-31 14.2   -15.1  -92.0 -55.4  0.389 0.189 0.256   22.0    20.3  #>  8 2002-08-31  6.18 -136.   -93.2 -58.7  0.215 0.187 0.248   16.1    17.4  #>  9 2002-09-30  4.05 -151.  -121.  -83.7  0.206 0.156 0.201   12.2    13.1  #> 10 2002-10-31  9.18  -76.9  -70.5 -62.1  0.268 0.224 0.241    7.00    8.96 #> # ℹ 26 more rows #> # ℹ 1 more variable: TEMP_70 <dbl> #>"},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Load SWAP parameters — load_swap_parameters","title":"Load SWAP parameters — load_swap_parameters","text":"Loads SWAP parameters parsed parse_swap_file() returns tibble","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load SWAP parameters — load_swap_parameters","text":"","code":"load_swap_parameters(project_path, swap_file = \"swap.swp\", verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load SWAP parameters — load_swap_parameters","text":"project_path path project directory (string swap_file name swap file parse (string) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load SWAP parameters — load_swap_parameters","text":"Tibble parameter set","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Load SWAP tables — load_swap_tables","title":"Load SWAP tables — load_swap_tables","text":"function loads SWAP tables parsed parse_swap_file()SWAP vectors parsed, done first using swap_file","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load SWAP tables — load_swap_tables","text":"","code":"load_swap_tables(project_path, swap_file = \"swap.swp\", verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load SWAP tables — load_swap_tables","text":"project_path Path project directory (string) swap_file name swap file parse (string) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load SWAP tables — load_swap_tables","text":"Returns list tibbles named column names.","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Load SWAP Vectors — load_swap_vectors","title":"Load SWAP Vectors — load_swap_vectors","text":"function loads SWAP vectors parsed parse_swap_file(). SWAP vectors parsed, done first using swap_file","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load SWAP Vectors — load_swap_vectors","text":"","code":"load_swap_vectors(project_path, swap_file = \"swap.swp\", verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load SWAP Vectors — load_swap_vectors","text":"project_path path project_directory (string) swap_file name swap file parse (string) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_swap_vectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load SWAP Vectors — load_swap_vectors","text":"Returns list vectors","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/load_variables_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads the SWAPtools variables database — load_variables_db","title":"Loads the SWAPtools variables database — load_variables_db","text":"gives package wide access SWAPtools databases, means individual function calls need re-load database individual environments.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/load_variables_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads the SWAPtools variables database — load_variables_db","text":"","code":"load_variables_db()"},{"path":"https://moritzshore.github.io/rswap/reference/load_variables_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads the SWAPtools variables database — load_variables_db","text":"returns TRUE database loaded (now just SWAPtools_variables.rds) FALSE loaded.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/match_swap_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Modeled Values To Observed Values — match_swap_data","title":"Match Modeled Values To Observed Values — match_swap_data","text":"function used internally match observed values modeled values format, easy pass performance indicators.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/match_swap_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Modeled Values To Observed Values — match_swap_data","text":"","code":"match_swap_data(   project_path,   variable,   depth = NULL,   verbose = F,   archived = F )"},{"path":"https://moritzshore.github.io/rswap/reference/match_swap_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Modeled Values To Observed Values — match_swap_data","text":"project_path path project directory (string) variable variable match (string) depth optional depth select (numeric) verbose print status? (boolean) archived project /rswap_saved/?","code":""},{"path":"https://moritzshore.github.io/rswap/reference/match_swap_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Modeled Values To Observed Values — match_swap_data","text":"Returns list two dataframes, .$mod .$obs. two dataframes identical dimensions column names.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/match_swap_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Match Modeled Values To Observed Values — match_swap_data","text":"function available since might use end user.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/match_swap_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match Modeled Values To Observed Values — match_swap_data","text":"","code":"# path to sample results (only for package internal example, you don't need # this function) example_path <- system.file(package = \"rswap\", \"extdata/rswap_example_output\")  # in your own projects, you would use something like this: # example_path <- \"C:/path/to/swap_folder/example_project\"  match_swap_data(example_path, \"WC\", depth = 15, verbose = TRUE) #> ℹ Observed data already loaded, not reloading. (use force=TRUE to force reload)  #> $mod #> # A tibble: 36 × 2 #>    DATE       WC_15 #>    <date>     <dbl> #>  1 2002-01-31 0.309 #>  2 2002-02-28 0.335 #>  3 2002-03-31 0.282 #>  4 2002-04-30 0.308 #>  5 2002-05-31 0.281 #>  6 2002-06-30 0.239 #>  7 2002-07-31 0.389 #>  8 2002-08-31 0.215 #>  9 2002-09-30 0.206 #> 10 2002-10-31 0.268 #> # ℹ 26 more rows #>  #> $obs #> # A tibble: 36 × 2 #>    DATE       WC_15 #>    <date>     <dbl> #>  1 2002-01-31 0.315 #>  2 2002-02-28 0.342 #>  3 2002-03-31 0.287 #>  4 2002-04-30 0.314 #>  5 2002-05-31 0.286 #>  6 2002-06-30 0.244 #>  7 2002-07-31 0.397 #>  8 2002-08-31 0.220 #>  9 2002-09-30 0.210 #> 10 2002-10-31 0.274 #> # ℹ 26 more rows #>"},{"path":"https://moritzshore.github.io/rswap/reference/melt_swap_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Melt SWAP data — melt_swap_data","title":"Melt SWAP data — melt_swap_data","text":"function transforms observed modeled data tidy format. makes easier use r packages ggplot2.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/melt_swap_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Melt SWAP data — melt_swap_data","text":"","code":"melt_swap_data(project_path, variable = NULL, depth = NULL, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/melt_swap_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Melt SWAP data — melt_swap_data","text":"project_path path project directory string variable variables include melt string depth depths include melt numeric verbose print status? flag","code":""},{"path":"https://moritzshore.github.io/rswap/reference/melt_swap_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Melt SWAP data — melt_swap_data","text":"Melted dataframe matched modeled observed values","code":""},{"path":"https://moritzshore.github.io/rswap/reference/melt_swap_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Melt SWAP data — melt_swap_data","text":"function adjust variables depths give . provide variables, depths, available ones used.","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/melt_swap_runs.html","id":null,"dir":"Reference","previous_headings":"","what":"Melt All Runs — melt_swap_runs","title":"Melt All Runs — melt_swap_runs","text":"function combines modeled observed data current run, along modeled observed data saved runs (single variable) returns tidy format, easy use plotting, etc.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/melt_swap_runs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Melt All Runs — melt_swap_runs","text":"","code":"melt_swap_runs(project_path, variable, depth = NULL, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/melt_swap_runs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Melt All Runs — melt_swap_runs","text":"project_path path project directory (string) variable variable used (string) depth optional depth filter , leave blank /depth (numeric) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/melt_swap_runs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Melt All Runs — melt_swap_runs","text":"Returns dataframe columns \"run\" \"DATE\" \"tag\" \"variable\" \"value\"","code":""},{"path":"https://moritzshore.github.io/rswap/reference/melt_swap_runs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Melt All Runs — melt_swap_runs","text":"internal function made available due possibly useful end user.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/melt_swap_runs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Melt All Runs — melt_swap_runs","text":"","code":"# path to sample results (only for package internal example, you don't need # this function) example_path <- system.file(package = \"rswap\", \"extdata/rswap_example_output\")  # in your own projects, you would use something like this: # example_path <- \"C:/path/to/swap_folder/example_project\"  melt_swap_runs(example_path, \"WC\", depth = 15, verbose = TRUE) #> ℹ Observed data already loaded, not reloading. (use force=TRUE to force reload)  #> # A tibble: 108 × 5 #>    DATE       value tag   run         variable #>    <date>     <dbl> <chr> <chr>       <chr>    #>  1 2002-01-31 0.309 past  example_run WC_15    #>  2 2002-02-28 0.335 past  example_run WC_15    #>  3 2002-03-31 0.282 past  example_run WC_15    #>  4 2002-04-30 0.308 past  example_run WC_15    #>  5 2002-05-31 0.281 past  example_run WC_15    #>  6 2002-06-30 0.239 past  example_run WC_15    #>  7 2002-07-31 0.389 past  example_run WC_15    #>  8 2002-08-31 0.215 past  example_run WC_15    #>  9 2002-09-30 0.206 past  example_run WC_15    #> 10 2002-10-31 0.268 past  example_run WC_15    #> # ℹ 98 more rows"},{"path":"https://moritzshore.github.io/rswap/reference/modify_swap_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify SWAP file — modify_swap_file","title":"Modify SWAP file — modify_swap_file","text":"function generates modified SWAP file, changing value passed variable. Standard behavior pass input_file output_file. input file parsed parse_swap_file(), value changed, output_file written project_path. However, function variety different modes, see Details","code":""},{"path":"https://moritzshore.github.io/rswap/reference/modify_swap_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify SWAP file — modify_swap_file","text":"","code":"modify_swap_file(   project_path,   input_file = NULL,   output_file = NULL,   variable,   value,   row = NULL,   fast = F,   write = T,   verbose = F )"},{"path":"https://moritzshore.github.io/rswap/reference/modify_swap_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify SWAP file — modify_swap_file","text":"project_path path project directory string input_file SWAP file name modify (required fast=FALSE) string output_file SWAP file name write (required write=TRUE) string variable SWAP variable change string value value assign string row (optional) pass vector (index) table. integer fast (optional) rswap already parsed swap file flag write (optional) Flag enable disable writing output file flag verbose (optional) print status? flag","code":""},{"path":"https://moritzshore.github.io/rswap/reference/modify_swap_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify SWAP file — modify_swap_file","text":"Returns path written output file","code":""},{"path":"https://moritzshore.github.io/rswap/reference/modify_swap_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify SWAP file — modify_swap_file","text":"function variety modes. like run function quickly, can enable fast parse input_file. works already parsed desired data, present rswap directory. Another way speed function disable write. simply write output_file Caution: passing output_file write=TRUE cause input_file overwritten! Note: changing variable located SWAP vector table, need pass row argument (index vectors, normal row tables)","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/move_run_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Move run files — move_run_files","title":"Move run files — move_run_files","text":"Moves swap.ok reruns.log rswap dir","code":""},{"path":"https://moritzshore.github.io/rswap/reference/move_run_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move run files — move_run_files","text":"","code":"move_run_files(work_dir, project, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/move_run_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move run files — move_run_files","text":"work_dir work dir project proj name verbose print?","code":""},{"path":"https://moritzshore.github.io/rswap/reference/parse_swap_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse SWAP File — parse_swap_file","title":"Parse SWAP File — parse_swap_file","text":"function reads SWAP main file writes parameters, vectors, tables csv format rswap directory. can loaded using load_swap_parameters(), load_swap_tables() load_swap_vectors()","code":""},{"path":"https://moritzshore.github.io/rswap/reference/parse_swap_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse SWAP File — parse_swap_file","text":"","code":"parse_swap_file(project_path, swap_file = \"swap.swp\", verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/parse_swap_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse SWAP File — parse_swap_file","text":"project_path path project directory (string) swap_file optional swap main file name (string) defaults \"swap.swp\" verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/parse_swap_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse SWAP File — parse_swap_file","text":"Returns paths parameters, vectors, tables written","code":""},{"path":"https://moritzshore.github.io/rswap/reference/parse_swap_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse SWAP File — parse_swap_file","text":"Also, parsing technique designed work SWAP example cases. SWAP main file structure something different, might run trouble. function expanded work SWAP input files like .dra","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/rswap_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize rswap — rswap_init","title":"Initialize rswap — rswap_init","text":"function optional starting point using rswap first time. copy example swap setup \"hupselbrook\" sample project directory \"rswap_init\" within working directory swap executable (hence need pass path).","code":""},{"path":"https://moritzshore.github.io/rswap/reference/rswap_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize rswap — rswap_init","text":"","code":"rswap_init(swap_exe, quiet = FALSE)"},{"path":"https://moritzshore.github.io/rswap/reference/rswap_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize rswap — rswap_init","text":"swap_exe path SWAP model (string) quiet flag stop output","code":""},{"path":"https://moritzshore.github.io/rswap/reference/rswap_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize rswap — rswap_init","text":"Returns project path \"hupselbrook\" SWAP setup.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/rswap_init.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize rswap — rswap_init","text":"sample directory contains SWAP input files, well template observed values. provides good starting point setting rswap project. Just changes name directory, fill observed file start modifying parameters. function successfully complete, underlying issue need fix continuing use rswap.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/rswap_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize rswap — rswap_init","text":"","code":"# This function cannot execute example code as it relies on the externally # provided swap model  # rswap_init(\"C:/path/to/swap.exe\")"},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare model runs — rswap_plot_compare","title":"Compare model runs — rswap_plot_compare","text":"graph highlights differences saved model runs given variable certain depth.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare model runs — rswap_plot_compare","text":"","code":"rswap_plot_compare(project_path, variable, depth = NULL, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare model runs — rswap_plot_compare","text":"project_path path project directory (string) variable variable show (string) depth depth variable, depth. Otherwise leave blank (string) verbose print status? (flag)","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot multiple variables at once — rswap_plot_multi","title":"Plot multiple variables at once — rswap_plot_multi","text":"Generates 1-4 axis plot desired variables. Designed help user understand model working, variables interacting.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot multiple variables at once — rswap_plot_multi","text":"","code":"rswap_plot_multi(project_path, vars, show = NULL, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot multiple variables at once — rswap_plot_multi","text":"project_path path project directory (string) vars list variables include plot (string/vector) show list variables show default (string/vector) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_multi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot multiple variables at once — rswap_plot_multi","text":"currently supports \"H\", \"WC\", \"DRAINAGE\", \"TEMP\". Working expanding","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot performance metrics — rswap_plot_performance","title":"Plot performance metrics — rswap_plot_performance","text":"function calculates statistical performance saved model runs /rswap_saved/ folder, well last performed run. per variable /given depths, passed statistical performance indicator stat package hydroGOF","code":""},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot performance metrics — rswap_plot_performance","text":"","code":"rswap_plot_performance(   project_path,   variable,   stat,   depth = NULL,   verbose = FALSE )"},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot performance metrics — rswap_plot_performance","text":"project_path path project directory (string) variable variable show (string) stat statistical indicator function package hydroGOF (string) depth depth(s) show. Leave blank (numeric/vector) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_performance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot performance metrics — rswap_plot_performance","text":"performance indicator result function passed string stat parameter called hydroGOF package. following supported stat: br2 cp d KGE mae md mNSE mse nrmse NSE pbias rd rmse rNSE rPearson rSD rsr ssq VE Please note, passing multiple variables differing depths work! (yet)","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot variable — rswap_plot_variable","title":"Plot variable — rswap_plot_variable","text":"function plots single SWAP variable given depth. depths provided, available depths used. plot can also interactive interactive = TRUE","code":""},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot variable — rswap_plot_variable","text":"","code":"rswap_plot_variable(   project_path,   variable,   depth = NULL,   interactive = F,   verbose = F )"},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot variable — rswap_plot_variable","text":"project_path path project directory string variable SWAP variable plot string depth depth(s) plot numeric (optional, left blank, available depths used) interactive use interactive plotly plot? flag verbose print status? flag","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/rswap_plot_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot variable — rswap_plot_variable","text":"","code":"# path to sample results (only for package internal example, you don't need # this function) example_path <- system.file(package = \"rswap\", \"extdata/rswap_example_output\")  # in your own projects, you would use something like this: # example_path <- \"C:/path/to/swap_folder/example_project\"  rswap_plot_variable(example_path, variable = \"WC\")"},{"path":"https://moritzshore.github.io/rswap/reference/run_swap.html","id":null,"dir":"Reference","previous_headings":"","what":"Run SWAP — run_swap","title":"Run SWAP — run_swap","text":"function runs SWAP model given project directory, optionally, certain swap_file. desire, can automatically match output SWAP model data provided rswap_observed_data.csv file setting autoset_output TRUE. verbose print model running status, also rswap timeout allows set maximum runtime model","code":""},{"path":"https://moritzshore.github.io/rswap/reference/run_swap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run SWAP — run_swap","text":"","code":"run_swap(   project_path,   swap_file = \"swap.swp\",   autoset_output = F,   force = T,   verbose = F,   timeout = Inf )"},{"path":"https://moritzshore.github.io/rswap/reference/run_swap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run SWAP — run_swap","text":"project_path path project directory (string) swap_file name *.swp main file (leave blank \"swap.swp\") autoset_output set TRUE, rswap automatically detect observed data provided observed file match SWAP output. set FALSE, INLIST csv must set user either manually set_swap_output() change_swap_par() several rswap function work force rswap directory already exists, new one generated/reloaded unless force=TRUE defaults true. verbose print status? (flag) timeout number seconds run timeout (unlimited default) (numeric)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/run_swap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run SWAP — run_swap","text":"Returns status code run.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/run_swap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run SWAP — run_swap","text":"pass one project_path, rswap run multiple projects parallel using run_swap_parallel(). like finer control parallel specific parameters, please use function. function simply run model, following, order: Build rswap directory: build_rswap_directory() Parses main swap file: parse_swap_file() Updates several parameters main file (paths, output settings): set_swap_output() Writes new SWAP main file: write_swp_file() Runs new SWAP main file. @seealso run_swap_parallel()","code":""},{"path":"https://moritzshore.github.io/rswap/reference/run_swap_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Run SWAP in parallel. — run_swap_parallel","title":"Run SWAP in parallel. — run_swap_parallel","text":"function allows execute multiple SWAP runs parallel.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/run_swap_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run SWAP in parallel. — run_swap_parallel","text":"","code":"run_swap_parallel(   project_paths,   n_cores = NULL,   working_dir = NULL,   swap_files = NULL,   autoset_output = F,   force = T,   verbose = F,   timeout = Inf )"},{"path":"https://moritzshore.github.io/rswap/reference/run_swap_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run SWAP in parallel. — run_swap_parallel","text":"project_paths character vector path projects run parallel. n_cores (optional) number CPU cores use. Defaults 2 less available. working_dir (optional) directory model runs run, processed, saved. defaults parent director first project_path swap_files (optional) character vector length project_paths. Defines name swap main files run. defaults \"swap.swp\". autoset_output (optional) Flag set TRUE, rswap automatically detect observed data provided observed file match SWAP output. set FALSE, INLIST csv must set user either manually set_swp_output() change_swap_par() several rswap function work force (optional) Flag, rswap directory already exists, new one generated/reloaded unless force=TRUE defaults true. verbose (optional) Flag, print status? timeout (optional) numeric, number seconds run timeout (unlimited default)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/run_swap_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run SWAP in parallel. — run_swap_parallel","text":"Nested list SWAP status codes run (100 = sucess)","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/run_swap_parallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run SWAP in parallel. — run_swap_parallel","text":"","code":"if(FALSE){ project_paths <- list.files(\"C:/somepath/\", full.names = T, pattern = \"hupsel\") run_swap_parallel(project_paths) }"},{"path":"https://moritzshore.github.io/rswap/reference/save_swap_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a SWAP run — save_swap_run","title":"Save a SWAP run — save_swap_run","text":"like keep results last SWAP model run, /setup , use function. need pass project_path last run project. give saved setup name, pass one via run_name parameter.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/save_swap_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a SWAP run — save_swap_run","text":"","code":"save_swap_run(project_path, run_name = NULL, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/save_swap_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a SWAP run — save_swap_run","text":"project_path path project directory (string) run_name name run saved. (string) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/save_swap_run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save a SWAP run — save_swap_run","text":"run saved, can compared saved runs, /next run perform. can done functions comparative_plot() plot_statistics() r","code":""},{"path":"https://moritzshore.github.io/rswap/reference/save_swap_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a SWAP run — save_swap_run","text":"","code":"# path to sample results (only for package internal example, you don't need # this function) example_path <- system.file(package = \"rswap\", \"extdata/rswap_example_output\")  # in your own projects, you would use something like this: # example_path <- \"C:/path/to/swap_folder/example_project\"  # this will throw a warning if \"example_run\" already exists (which it does) save_swap_run(example_path, run_name = \"example_run\", verbose = TRUE) #> Warning: 'C:\\Users\\mosh\\AppData\\Local\\Programs\\R\\R-4.4.3\\library\\rswap\\extdata\\rswap_example_output\\rswap_saved\\example_run' already exists #> ✅ all files succesfully saved to: #> C:/Users/mosh/AppData/Local/Programs/R/R-4.4.3/library/rswap/extdata/rswap_example_output/rswap_saved/example_run"},{"path":"https://moritzshore.github.io/rswap/reference/set_swap_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Set SWAP Format — set_swap_format","title":"Set SWAP Format — set_swap_format","text":"function converts parameter value SWAP (FORTRAN) required format. functionality relies SWAPtools.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/set_swap_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set SWAP Format — set_swap_format","text":"","code":"set_swap_format(parameter, value)"},{"path":"https://moritzshore.github.io/rswap/reference/set_swap_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set SWAP Format — set_swap_format","text":"parameter SWAP parameter name, string form value value converted","code":""},{"path":"https://moritzshore.github.io/rswap/reference/set_swap_format.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set SWAP Format — set_swap_format","text":"Moritz Shore, Martin Mulder","code":""},{"path":"https://moritzshore.github.io/rswap/reference/set_swap_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Set SWAP output — set_swap_output","title":"Set SWAP output — set_swap_output","text":"function alters output parameters SWAP input files.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/set_swap_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set SWAP output — set_swap_output","text":"","code":"set_swap_output(   project_path,   parameters,   autoset_output = F,   verbose = F,   force = T )"},{"path":"https://moritzshore.github.io/rswap/reference/set_swap_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set SWAP output — set_swap_output","text":"project_path path project directory parameters parameter dataframe autoset_output flag matching output observed file. verbose print status? (flag) force forces reload SWAP project files (default, true)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/set_swap_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set SWAP output — set_swap_output","text":"Returns parameter dataframe modified INLIST_CSV parameter.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/set_swap_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set SWAP output — set_swap_output","text":"Currently modifies INLIST_CSV, functionality placed time.","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/update_swap_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Update SWAP Main File Paths — update_swap_paths","title":"Update SWAP Main File Paths — update_swap_paths","text":"rswap creates new directory model file, paths files need update still correct. function just .","code":""},{"path":"https://moritzshore.github.io/rswap/reference/update_swap_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update SWAP Main File Paths — update_swap_paths","text":"","code":"update_swap_paths(project_path, swap_exe, parameters, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/update_swap_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update SWAP Main File Paths — update_swap_paths","text":"project_path path temp directory (string) swap_exe path SWAP (string) parameters SWAP main file parameters (string) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/update_swap_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update SWAP Main File Paths — update_swap_paths","text":"Returns SWAP parameter dataframe modified path values","code":""},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Write SWAP File — write_swap_file","title":"Write SWAP File — write_swap_file","text":"Writes SWAP main file parameters, vectors, tables stored rswap directory. use function, need parsed SWAP file","code":""},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write SWAP File — write_swap_file","text":"","code":"write_swap_file(project_path, outfile, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write SWAP File — write_swap_file","text":"project_path path project directory outfile name SWAP file write. stored project directory (string) verbose print status? (flag)","code":""},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write SWAP File — write_swap_file","text":"Returns path written file","code":""},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write SWAP File — write_swap_file","text":"function currently intended SWAP main file, expanded handle SWAP input files time.","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_meteo.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves SWAP meteo data to project — write_swap_meteo","title":"Saves SWAP meteo data to project — write_swap_meteo","text":"function writes provided dataframe back rswap template csv file, optionally also exports data SWAP compatible format (.met). Additionally, one can automatically update parameters TSTART, TEND METFIL setting autoset = TRUE.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_meteo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves SWAP meteo data to project — write_swap_meteo","text":"","code":"write_swap_meteo(   project_path,   data,   export = TRUE,   name = NULL,   autoset = FALSE,   swap_file = \"swap.swp\",   verbose = TRUE )"},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_meteo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves SWAP meteo data to project — write_swap_meteo","text":"project_path Path project directory (string) data dataframe SWAP meteo data loaded load_swap_meteo() export (optional) flag, data written SWAP format? name (optional) string, desired name meteo file. autoset (optional) flag, automatically adjusts SWAP project start end times provided data, well metfile name. swap_file (optional) name swap file modify (swap.swp default) verbose (flag) print actions console?","code":""},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_meteo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Saves SWAP meteo data to project — write_swap_meteo","text":"path met file written.","code":""},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_meteo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Saves SWAP meteo data to project — write_swap_meteo","text":"Writes / SWAP meteo dataframe loaded load_swap_meteo()","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_meteo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saves SWAP meteo data to project — write_swap_meteo","text":"","code":"#tbc"},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Write SWAP parameters — write_swap_parameters","title":"Write SWAP parameters — write_swap_parameters","text":"Writes SWAP parameter set rswap directory .csv format","code":""},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write SWAP parameters — write_swap_parameters","text":"","code":"write_swap_parameters(project_path, parameters, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write SWAP parameters — write_swap_parameters","text":"project_path path project directory parameters parameter set loaded load_swap_parameters() (dataframe) verbose print status? (flag)","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Write SWAP Tables — write_swap_tables","title":"Write SWAP Tables — write_swap_tables","text":"Writes SWAP table set rswap directory .csv format","code":""},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write SWAP Tables — write_swap_tables","text":"","code":"write_swap_tables(project_path, tables, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write SWAP Tables — write_swap_tables","text":"project_path path project directory tables tables loaded load_swap_tables() (list dataframes) verbose print status? (flag)","code":""},{"path":[]},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Write SWAP Vectors — write_swap_vectors","title":"Write SWAP Vectors — write_swap_vectors","text":"Writes SWAP vector set rswap directory .csv format","code":""},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write SWAP Vectors — write_swap_vectors","text":"","code":"write_swap_vectors(project_path, vectors, verbose = F)"},{"path":"https://moritzshore.github.io/rswap/reference/write_swap_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write SWAP Vectors — write_swap_vectors","text":"project_path path project directory vectors vectors loaded load_swap_vectors() (list dataframes) verbose print status? (flag)","code":""},{"path":[]}]
