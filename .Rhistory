met_files <- file_list[which(not_numeric == FALSE)]
met_status <- file.copy(from = met_files, to = temp_directory)
# copy in a template observed excel
template_observed = system.file("extdata/rswap_observed_data.xlsx", package="rswap")
# if the template does not yet exist in the project directory, copy it in there
if("rswap_observed_data.xlsx" %in% list.files(project_path) == FALSE){
obs_status <- file.copy(from = template_observed, to = paste0(project_path, "/rswap_observed_data.xlsx"))
cat("copying template sheet 'rswap_observed_data_xlsx' into project directory\n")
}
# return the path to the temp directory
return(temp_directory)
temp_directory
library(rswap)
project_path = "C:/Users/mosh/Documents/tetves"
observed = "C:/Users/mosh/Documents/tetves/rswap_observed_data.xlsx"
swap_exe = "C:/Users/mosh/Documents/swap.exe"
swap_file = "swap.swp"
res <- parse_swp_file(project_path)
res$parameters = change_swap_par(res$parameters, "PROJECT", "testing_rswap")
loc <- write_swap_file(project_path, parameters = res$parameters, table_path = res$table_path, verbose = T)
project_path
version = "v1.0" # TODO version should be some kind of global variable)
# create a temp directory to work in
temp_directory <- build_rswap_directory(project_path)
project_path
source("~/GitHub/rswap/R/io.R")
# create a temp directory to work in
temp_directory <- build_rswap_directory(project_path)
write.table(
x = paste("* SWAP main file created by rswap", version, "at", Sys.time()),
file = temp_directory,
quote = F,
col.names = F,
row.names = F,
append = F
)
temp_directory
outfile
project_path = "C:/Users/mosh/Documents/tetves"
observed = "C:/Users/mosh/Documents/tetves/rswap_observed_data.xlsx"
swap_exe = "C:/Users/mosh/Documents/swap.exe"
swap_file = "swap.swp"
res <- parse_swp_file(project_path)
library(rswap)
res$parameters = change_swap_par(res$parameters, "PROJECT", "testing_rswap")
loc <-
write_swap_file(
project_path,
parameters = res$parameters,
table_path = res$table_path,
verbose = T
)
run_swap(
project_path,
swap_exe = "swap.exe",
swap_file = "rswap.swp",
verbose = T
)
run_swap(
project_path,
swap_exe = swap_exe,
swap_file = "rswap.swp",
verbose = T
)
swap_exe
run_swap(
project_path,
swap_exe = swap_exe,
swap_file = "rswap.swp",
verbose = T
)
# create a temp directory to work in
temp_directory <- build_rswap_directory(project_path)
# update the swap main file with the new paths to the input files
file_path <- update_swp_paths(temp_directory = temp_directory, swap_exe = swap_exe, swap_file = swap_file, verbose = verbose)
verbose = F
# update the swap main file with the new paths to the input files
file_path <- update_swp_paths(temp_directory = temp_directory, swap_exe = swap_exe, swap_file = swap_file, verbose = verbose)
# parse the working directory from the given swap path
swap_path_split = swap_exe %>% str_split("swap.exe", simplify = T)
swap_wd <- swap_path_split[,1]
# remove the working directory from the path of the swap main file
fixed_path <- file_path %>% str_remove(swap_wd)
# run the model
msg <- run( command = "swap.exe", wd = swap_wd, args = fixed_path,
error_on_status = F,
timeout = timeout,
echo_cmd = verbose,
echo = verbose
)
library(processx)
# run the model
msg <- run( command = "swap.exe", wd = swap_wd, args = fixed_path,
error_on_status = F,
timeout = timeout,
echo_cmd = verbose,
echo = verbose
)
timeout = Inf
# run the model
msg <- run( command = "swap.exe", wd = swap_wd, args = fixed_path,
error_on_status = F,
timeout = timeout,
echo_cmd = verbose,
echo = verbose
)
msg
library(rswap)
run_swap(
project_path,
swap_exe = swap_exe,
swap_file = "rswap.swp",
verbose = T
)
swap_file
# TODO this could be revamped
swap_exe_name = swap_exe %>% str_split("/") %>% unlist() %>% tail(n=1)
path_without_swap <-  swap_exe %>% str_remove(swap_exe_name)
swap_main_file_path <- temp_directory %>% str_remove(path_without_swap)
swap_exe_name
path_without_swap
swap_main_file_path
swap_wd
fixed_path
swap_exe = swap_exe
swap_file = "rswap.swp"
swap_file
# create a temp directory to work in
temp_directory <- build_rswap_directory(project_path)
# update the swap main file with the new paths to the input files
file_path <-
update_swp_paths(
temp_directory = temp_directory,
swap_exe = swap_exe,
swap_file = swap_file,
verbose = verbose
)
swap_file
run_swap(
project_path,
swap_exe = swap_exe,
swap_file = "swap.swp",
verbose = T
)
library(rswap)
run_swap(
project_path = "C:/Users/mosh/Documents/tetves",
swap_exe = "C:/Users/mosh/Documents/swap.exe",
swap_file = "swap.swp",
verbose = T
)
loc
library(rswap)
# run the normal swap
run_swap(
project_path = "C:/Users/mosh/Documents/tetves",
swap_exe = "C:/Users/mosh/Documents/swap.exe",
swap_file = "swap.swp",
verbose = T
)
# change a param
res <- parse_swp_file(project_path)
res$parameters = change_swap_par(res$parameters, "PROJECT", "testing_rswap")
# write the new file
loc <-
write_swap_file(
project_path,
parameters = res$parameters,
table_path = res$table_path,
verbose = T
)
loc
swap_exe
stat<-run_swap(project_path = loc, swap_exe = swap_exe, swap_file = "rswap.swp", verbose = T)
stat <- run_swap(project_path = loc, swap_exe = swap_exe, swap_file = "rswap.swp", verbose = T)
loc
library(rswap)
stat <-
run_swap(
project_path = loc,
swap_exe = swap_exe,
swap_file = "rswap.swp",
verbose = T, create_temp_dir = F
)
temp_directory = project_path
temp_directory
project_path = loc
temp_directory = project_path
temp_directory
swap_exe
swap_file
# update the swap main file with the new paths to the input files
file_path <-
update_swp_paths(
temp_directory = temp_directory,
swap_exe = swap_exe,
swap_file = swap_file,
verbose = verbose
)
# TODO this could be revamped
swap_exe_name = swap_exe %>% str_split("/") %>% unlist() %>% tail(n=1)
path_without_swap <-  swap_exe %>% str_remove(swap_exe_name)
swap_main_file_path <- temp_directory %>% str_remove(path_without_swap)
res <- parse_swp_file(project_path, swap_file, verbose)
project_path
library(rswap)
# change a param
res <- parse_swp_file(project_path)
project_path
# run the normal swap
run_swap(
project_path = "C:/Users/mosh/Documents/tetves",
swap_exe = "C:/Users/mosh/Documents/swap.exe",
swap_file = "swap.swp",
verbose = T
)
project_path = "C:/Users/mosh/Documents/tetves"
# change a param
res <- parse_swp_file(project_path)
# change a param
res <- parse_swp_file(project_path, create_temp_dir = T)
res$parameters = change_swap_par(res$parameters, "PROJECT", "testing_rswap")
project_path
# write the new file
loc <-
write_swap_file(
project_path,
parameters = res$parameters,
table_path = res$table_path,
verbose = T
)
# write the new file
loc <-
write_swap_file(
project_path,
parameters = res$parameters,
table_path = res$table_path,
verbose = T
)
stat <-
run_swap(
project_path = loc,
swap_exe = swap_exe,
swap_file = "rswap.swp",
verbose = T, create_temp_dir = F
)
create_temp_dir
create_temp_dir = F
temp_directory = project_path
project_path = loc
temp_directory = project_path
temp_directory
temp_directory
# update the swap main file with the new paths to the input files
file_path <-
update_swp_paths(
temp_directory = temp_directory,
swap_exe = swap_exe,
swap_file = swap_file,
verbose = verbose
)
# TODO this could be revamped
swap_exe_name = swap_exe %>% str_split("/") %>% unlist() %>% tail(n=1)
path_without_swap <-  swap_exe %>% str_remove(swap_exe_name)
swap_main_file_path <- temp_directory %>% str_remove(path_without_swap)
res <- parse_swp_file(project_path, swap_file, verbose, )
project_path
swap_file
# change a param
res <- parse_swp_file(project_path, create_temp_dir = T)
res$parameters = change_swap_par(res$parameters, "PROJECT", "testing_rswap")
# write the new file
loc <-
write_swap_file(
project_path,
parameters = res$parameters,
table_path = res$table_path,
verbose = T
)
project_path = "C:/Users/mosh/Documents/tetves"
# change a param
res <- parse_swp_file(project_path, create_temp_dir = T)
res$parameters = change_swap_par(res$parameters, "PROJECT", "testing_rswap")
# write the new file
loc <-
write_swap_file(
project_path,
parameters = res$parameters,
table_path = res$table_path,
verbose = T
)
list.files(project_path)
"rswap" %in% list.files(project_path)
project_path
temp_directory <- paste0(project_path, "/rswap/")
temp_directory
# parse the working directory from the given swap path
swap_path_split = swap_exe %>% str_split("swap.exe", simplify = T)
swap_wd <- swap_path_split[,1]
swap_wd
# remove the working directory from the path of the swap main file
fixed_path <- file_path %>% str_remove(swap_wd)
fixed_path
# run the model
msg <- run( command = "swap.exe", wd = swap_wd, args = fixed_path,
error_on_status = F,
timeout = timeout,
echo_cmd = verbose,
echo = verbose
)
msg
verbose =  T
# run the model
msg <- run( command = "swap.exe", wd = swap_wd, args = fixed_path,
error_on_status = F,
timeout = timeout,
echo_cmd = verbose,
echo = verbose
)
res$parameters = change_swap_par(res$parameters, "PROJECT", "'testing_rswap'")
# write the new file
loc <-
write_swap_file(
project_path,
parameters = res$parameters,
table_path = res$table_path,
verbose = T
)
library(rswap)
library(rswap)
# run the normal swap
run_swap(
project_path = "C:/Users/mosh/Documents/tetves",
swap_exe = "C:/Users/mosh/Documents/swap.exe",
swap_file = "swap.swp",
verbose = T
)
# change a param
res <- parse_swp_file(project_path, create_temp_dir = T)
res$parameters = change_swap_par(res$parameters, "PROJECT", "'testing_rswap'")
# write the new file
loc <-
write_swap_file(
project_path,
parameters = res$parameters,
table_path = res$table_path,
verbose = T
)
stat <-
run_swap(
project_path = loc,
swap_exe = swap_exe,
swap_file = "rswap.swp",
verbose = T, create_temp_dir = F
)
stat <-
run_swap(
project_path = loc,
swap_exe = swap_exe,
swap_file = "rswap.swp",
verbose = T
)
loc
stat <-
run_swap(
project_path = project_path,
swap_exe = swap_exe,
swap_file = "rswap.swp",
verbose = T
)
# change a param
res <- parse_swp_file(project_path, create_temp_dir = T)
res$parameters = change_swap_par(res$parameters, "PROJECT", "'testing_rswap'")
# write the new file
loc <-
write_swap_file(
project_path,
parameters = res$parameters,
table_path = res$table_path,
verbose = T
)
stat <-
run_swap(
project_path = project_path,
swap_exe = swap_exe,
swap_file = "rswap.swp",
verbose = T
)
"rswap" %in% list.files(project_path)
stat <-
run_swap(
project_path = project_path,
swap_exe = swap_exe,
swap_file = "rswap.swp",
verbose = T
)
# change a param
res <- parse_swp_file(project_path, create_temp_dir = T)
res$parameters = change_swap_par(res$parameters, "PROJECT", "'testing_rswap'")
# write the new file
loc <-
write_swap_file(
project_path,
parameters = res$parameters,
table_path = res$table_path,
verbose = T
)
stat <-
run_swap(
project_path = project_path,
swap_exe = swap_exe,
swap_file = "rswap.swp",
verbose = T
)
# run the normal swap
run_swap(
project_path = "C:/Users/mosh/Documents/tetves",
swap_exe = "C:/Users/mosh/Documents/swap.exe",
swap_file = "rswap.swp",
verbose = T
)
fixed_path
# remove the working directory from the path of the swap main file
fixed_path <- file_path %>% str_remove(swap_wd)
file_path
swap_file
library(rswap)
file_path
library(rswap)
project_path
temp_directory <- build_rswap_directory(project_path)
temp_directory
swap_file
swap_file
# update the swap main file with the new paths to the input files
file_path <-
update_swp_paths(
temp_directory = temp_directory,
swap_exe = swap_exe,
swap_file = swap_file,
verbose = verbose
)
# update the swap main file with the new paths to the input files
file_path <-
update_swp_paths(
temp_directory = temp_directory,
swap_exe = swap_exe,
swap_file = swap_file,
verbose = verbose
)
swap_file
swap_file = "swap.swp"
# update the swap main file with the new paths to the input files
file_path <-
update_swp_paths(
temp_directory = temp_directory,
swap_exe = swap_exe,
swap_file = swap_file,
verbose = verbose
)
file_path
temp_directory
file_path
temp_directory
file_path <-  paste0(project_path, "/rswap/")
# parse the working directory from the given swap path
swap_path_split = swap_exe %>% str_split("swap.exe", simplify = T)
swap_path_split
swap_wd <- swap_path_split[,1]
# remove the working directory from the path of the swap main file
fixed_path <- file_path %>% str_remove(swap_wd)
fixed_path
fixed_path
swap_wd
temp_directory <- build_rswap_directory(project_path)
# update the swap main file with the new paths to the input files
file_path <-
update_swp_paths(
temp_directory = temp_directory,
swap_exe = swap_exe,
swap_file = swap_file,
verbose = verbose
)
file_path
file_path <-  paste0(project_path, "/rswap/rswap.swp")
file_path
# parse the working directory from the given swap path
swap_path_split = swap_exe %>% str_split("swap.exe", simplify = T)
swap_wd <- swap_path_split[,1]
# remove the working directory from the path of the swap main file
fixed_path <- file_path %>% str_remove(swap_wd)
# run the model
msg <- run( command = "swap.exe", wd = swap_wd, args = fixed_path,
error_on_status = F,
timeout = timeout,
echo_cmd = verbose,
echo = verbose
)
# run the normal swap
run_swap(
project_path = "C:/Users/mosh/Documents/tetves",
swap_exe = "C:/Users/mosh/Documents/swap.exe",
swap_file = "swap.swp",
verbose = T
)
project_path
project_path = "C:/Users/mosh/Documents/tetves"
swap_exe = "C:/Users/mosh/Documents/swap.exe"
swap_file = "swap.swp"
verbose = T
"rswap" %in% list.files(project_path) == FALSE)
project_path
