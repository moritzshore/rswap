line
is_param
header = line %>% str_split("\\s+") %>% unlist() %>% str_trim()
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i + 1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
swap_table_end
# super messy!
swap_table = swp[i:(i + swap_table_end - 2)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
swap_table
# super messy!
swap_table = swp[i:(i + swap_table_end - 2)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
colnames(swap_table) <- swap_table[1,]
swap_table <- swap_table[-1,]
rownames(swap_table)=c(1:dim(swap_table)[1])
swap_table
# super messy!
swap_table = swp[i:(i + swap_table_end - 1)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
colnames(swap_table) <- swap_table[1,]
swap_table <- swap_table[-1,]
rownames(swap_table)=c(1:dim(swap_table)[1])
tab_df <- append(tab_df, swap_table)
swap_table
# skip the next rows because you already read them in
new_i = i + swap_table_end - 1
new_i
# skip the next rows because you already read them in
new_i = i + swap_table_end
new_i
par_df <- data.frame()
tab_df <- list()
new_i = 0
i = 54
for (i in c(1:length(swp))) {
print(i)
print(glue("new i {new_i}"))
if(i <= new_i){
next()
}
line = swp[i]
is_param <- line %>% grepl(x = ., "=")
if (is_param == TRUE) {
param = line %>% str_split("=") %>% unlist() %>% str_trim() %>% nth(1)
value = line %>% str_split("=") %>% unlist() %>% str_trim() %>% nth(2)
add_row = data.frame(param = param,
value = value)
par_df <- rbind(par_df, add_row)
} else{
header = line %>% str_split("\\s+") %>% unlist() %>% str_trim()
# finding the next equal sign indicates end of table (i sure hope..)
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i + 1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
# super messy!
swap_table = swp[i:(i + swap_table_end - 1)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
colnames(swap_table) <- swap_table[1,]
swap_table <- swap_table[-1,]
rownames(swap_table)=c(1:dim(swap_table)[1])
tab_df <- append(tab_df, swap_table)
# skip the next rows because you already read them in
new_i = i + swap_table_end
}
}
for (i in c(1:length(swp))) {
print(i)
print(glue("new i {new_i}"))
if(i <= new_i){
print("skip!")
next()
}
line = swp[i]
is_param <- line %>% grepl(x = ., "=")
if (is_param == TRUE) {
param = line %>% str_split("=") %>% unlist() %>% str_trim() %>% nth(1)
value = line %>% str_split("=") %>% unlist() %>% str_trim() %>% nth(2)
add_row = data.frame(param = param,
value = value)
par_df <- rbind(par_df, add_row)
} else{
header = line %>% str_split("\\s+") %>% unlist() %>% str_trim()
# finding the next equal sign indicates end of table (i sure hope..)
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i + 1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
# super messy!
swap_table = swp[i:(i + swap_table_end - 1)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
colnames(swap_table) <- swap_table[1,]
swap_table <- swap_table[-1,]
rownames(swap_table)=c(1:dim(swap_table)[1])
tab_df <- append(tab_df, swap_table)
# skip the next rows because you already read them in
new_i = i + swap_table_end
}
}
i = 59
print(i)
print(glue("new i {new_i}"))
if(i <= new_i){
print("skip!")
next()
}
line = swp[i]
is_param <- line %>% grepl(x = ., "=")
is_param
line
param = line %>% str_split("=") %>% unlist() %>% str_trim() %>% nth(1)
value = line %>% str_split("=") %>% unlist() %>% str_trim() %>% nth(2)
add_row = data.frame(param = param,
value = value)
header = line %>% str_split("\\s+") %>% unlist() %>% str_trim()
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i + 1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
# super messy!
swap_table = swp[i:(i + swap_table_end - 1)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
colnames(swap_table) <- swap_table[1,]
swap_table <- swap_table[-1,]
rownames(swap_table)=c(1:dim(swap_table)[1])
dim(swap_table)
rownames(swap_table)=c(1:dim(swap_table)[1])
swap_table
# super messy!
swap_table = swp[i:(i + swap_table_end - 1)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
swap_table
swap_table_end
# super messy!
swap_table = swp[i:(i + swap_table_end)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
swap_table = swp[i:(i + swap_table_end)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
swap_table
# super messy!
swap_table = swp[i:(i + swap_table_end)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
colnames(swap_table) <- swap_table[1,]
swap_table <- swap_table[-1,]
rownames(swap_table)=c(1:dim(swap_table)[1])
tab_df <- append(tab_df, swap_table)
tab_df
swap_table
par_df <- data.frame()
tab_df <- list()
new_i = 0
i = 59
for (i in c(1:length(swp))) {
print(i)
print(glue("new i {new_i}"))
if(i <= new_i){
print("skip!")
next()
}
line = swp[i]
is_param <- line %>% grepl(x = ., "=")
if (is_param == TRUE) {
param = line %>% str_split("=") %>% unlist() %>% str_trim() %>% nth(1)
value = line %>% str_split("=") %>% unlist() %>% str_trim() %>% nth(2)
add_row = data.frame(param = param,
value = value)
par_df <- rbind(par_df, add_row)
} else{
header = line %>% str_split("\\s+") %>% unlist() %>% str_trim()
# finding the next equal sign indicates end of table (i sure hope..)
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i + 1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
# super messy!
swap_table = swp[i:(i + swap_table_end)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
colnames(swap_table) <- swap_table[1,]
swap_table <- swap_table[-1,]
rownames(swap_table)=c(1:dim(swap_table)[1])
tab_df <- append(tab_df, swap_table)
# skip the next rows because you already read them in
new_i = i + swap_table_end
}
}
i = 49
line = swp[i]
is_param <- line %>% grepl(x = ., "=")
is_param
line
header = line %>% str_split("\\s+") %>% unlist() %>% str_trim()
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i + 1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
header
swap_table_end
# super messy!
swap_table = swp[i:(i + swap_table_end)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
swap_table
line
header = line %>% str_split("\\s+") %>% unlist() %>% str_trim()
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i + 1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
swap_table_end
# super messy!
swap_table = swp[i:(i + swap_table_end)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
swap_table
swp[i:(i + swap_table_end)]
# super messy!
swap_table = swp[i:(i + swap_table_end-1)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
swap_table
par_df <- data.frame()
tab_df <- list()
new_i = 0
for (i in c(1:length(swp))) {
print(i)
print(glue("new i {new_i}"))
if(i <= new_i){
print("skip!")
next()
}
line = swp[i]
is_param <- line %>% grepl(x = ., "=")
if (is_param == TRUE) {
param = line %>% str_split("=") %>% unlist() %>% str_trim() %>% nth(1)
value = line %>% str_split("=") %>% unlist() %>% str_trim() %>% nth(2)
add_row = data.frame(param = param,
value = value)
par_df <- rbind(par_df, add_row)
} else{
header = line %>% str_split("\\s+") %>% unlist() %>% str_trim()
# finding the next equal sign indicates end of table (i sure hope..)
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i + 1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
# super messy!
swap_table = swp[i:(i + swap_table_end-1)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
colnames(swap_table) <- swap_table[1,]
swap_table <- swap_table[-1,]
rownames(swap_table)=c(1:dim(swap_table)[1])
tab_df <- append(tab_df, swap_table)
# skip the next rows because you already read them in
new_i = i + swap_table_end
}
}
i
line = swp[i]
is_param <- line %>% grepl(x = ., "=")
is_param
header = line %>% str_split("\\s+") %>% unlist() %>% str_trim()
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i + 1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
# super messy!
swap_table = swp[i:(i + swap_table_end-1)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
colnames(swap_table) <- swap_table[1,]
swap_table <- swap_table[-1,]
swap_table
swap_table_end
swp[(i + 1):length(swp)]
i
line
swp[(i+1):length(swp)]
line
swp[(i+1):length(swp)]
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
swp[(i):length(swp)]
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
swp[i+swap_table_end]
swp[i+swap_table_end] %>% str_split("\\s+")
swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist()
swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth()
swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1)
swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% is.Date()
swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% lubridate::is.Date()
swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% as.date()
swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% as.Date()
swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% as.POSIXct()
swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"-")
if_date <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"-")
if_date2 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"/")
if_date3 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,".")
any(c(if_date, if_date2, if_date3)
any(c(if_date, if_date2, if_date3)
any(c(if_date, if_date2, if_date3)
any(c(if_date, if_date2, if_date3)
any(c(if_date, if_date2, if_date3)
any(c(if_date, if_date2, if_date3))
any(c(if_date, if_date2, if_date3))
any(c(if_date, if_date2, if_date3))
any(c(if_date, if_date2, if_date3))
while(any(c(if_date, if_date2, if_date3)))
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i+1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
if_date <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"-")
if_date3 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"..")
if_date3
swp[i+swap_table_end]
swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1)
if_date3 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"\\.")
if_date3
if_date <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"-")
if_date2 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"/")
if_date3 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"\\.")
while(any(c(if_date, if_date2, if_date3)))
while(any(c(if_date, if_date2, if_date3))){
swap_table_end = swap_table_end+1
if_date <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"-")
if_date2 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"/")
if_date3 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,".")
}
swap_table_end
header = line %>% str_split("\\s+") %>% unlist() %>% str_trim()
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i+1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
swap_table_end
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i+1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
if_date <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"-")
if_date2 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"/")
if_date3 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"\\.")
if_date
if_date2
if_date2
any(c(if_date, if_date2, if_date3))
swap_table_end = swap_table_end+1
if_date <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"-")
if_date2 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"/")
if_date3 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,".")
if_date
if_date2
if_date3
header = line %>% str_split("\\s+") %>% unlist() %>% str_trim()
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i+1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
if_date <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"-")
if_date2 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"/")
if_date3 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"\\.")
while(any(c(if_date, if_date2, if_date3))){
swap_table_end = swap_table_end+1
if_date <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"-")
if_date2 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"/")
if_date3 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"\\.")
}
swap_table_end
# super messy!
swap_table = swp[i:(i + swap_table_end-1)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
colnames(swap_table) <- swap_table[1,]
swap_table <- swap_table[-1,]
rownames(swap_table)=c(1:dim(swap_table)[1])
swap_table
new_i = 0
par_df <- data.frame()
tab_df <- list()
new_i = 0
for (i in c(1:length(swp))) {
print(i)
print(glue("new i {new_i}"))
if(i <= new_i){
print("skip!")
next()
}
line = swp[i]
is_param <- line %>% grepl(x = ., "=")
if (is_param == TRUE) {
param = line %>% str_split("=") %>% unlist() %>% str_trim() %>% nth(1)
value = line %>% str_split("=") %>% unlist() %>% str_trim() %>% nth(2)
add_row = data.frame(param = param,
value = value)
par_df <- rbind(par_df, add_row)
} else{
header = line %>% str_split("\\s+") %>% unlist() %>% str_trim()
# finding the next equal sign indicates end of table (i sure hope..)
# finds the next NON NUMERIC VALUE
swap_table_end = swp[(i+1):length(swp)] %>%
str_split("\\s+") %>% #split by whitespace
map(1) %>% # take first elemment
unlist() %>% # unlist it
as.numeric() %>% # convert to numeric
is.na() %>% # check where it failed
which() %>% # get index
min() %>% # get first index
suppressWarnings() # supress warning of NA coersion
if_date <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"-")
if_date2 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"/")
if_date3 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"\\.")
while(any(c(if_date, if_date2, if_date3))){
swap_table_end = swap_table_end+1
if_date <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"-")
if_date2 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"/")
if_date3 <- swp[i+swap_table_end] %>% str_split("\\s+") %>% unlist() %>% nth(1) %>% grepl(x=.,"\\.")
}
# super messy!
swap_table = swp[i:(i + swap_table_end-1)] %>% str_split("\\s+") %>% as.data.frame() %>% t() %>% as.data.frame()
colnames(swap_table) <- swap_table[1,]
swap_table <- swap_table[-1,]
rownames(swap_table)=c(1:dim(swap_table)[1])
tab_df <- append(tab_df, swap_table)
# skip the next rows because you already read them in
new_i = i + swap_table_end
}
}
View(tab_df)
write.table(c(param_df, tab_df), file = "swap.swp", quote = F, col.names = F, row.names = F)
write.table(c(par_df, tab_df), file = "swap.swp", quote = F, col.names = F, row.names = F)
par_df
View(par_df)
tab_df[1]
tab_df[2]
tab_df[4]
tab_df$`-95.0`
