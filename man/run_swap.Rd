% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.R
\name{run_swap}
\alias{run_swap}
\title{Run SWAP}
\usage{
run_swap(
  project_path,
  swap_file = "swap.swp",
  autoset_output = F,
  force = T,
  verbose = F,
  timeout = Inf
)
}
\arguments{
\item{project_path}{path to the project directory (string)}

\item{swap_file}{name of the *.swp main file (leave blank for "swap.swp")}

\item{autoset_output}{If set to \code{TRUE}, rswap will automatically detect
your observed data provided in the observed file and match it to the SWAP
output. if this is set to \code{FALSE}, then INLIST csv must be set by the user either
manually or with \code{set_swap_output()} or \code{change_swap_par()} for several other \code{rswap} function to work}

\item{force}{If an rswap directory already exists, no new one will be generated/reloaded unless \code{force=TRUE} defaults to true.}

\item{verbose}{print status? (flag)}

\item{timeout}{number of seconds before run timeout (unlimited by default) (numeric)}
}
\value{
Returns the status code of the run.
}
\description{
This function runs the SWAP model for the given project directory, and
optionally, a certain \code{swap_file}.
\itemize{
\item If you desire, you can automatically match the output of the SWAP model to the data provided in the \code{rswap_observed_data.csv} file by setting \code{autoset_output} to \code{TRUE}.
\item \code{verbose} will print not only model running status, but also what rswap is doing
\item \code{timeout} allows you to set the maximum runtime of the model
}
}
\details{
If you pass more than one \code{project_path}, then rswap will run your multiple
projects in parallel using \code{run_swap_parallel()}. If you would like finer
control over the parallel specific parameters, please use that function.

This function does more than simply run the model, it does the following, in this order:
\enumerate{
\item Build the rswap directory: \code{build_rswap_directory()}
\item Parses the main swap file: \code{parse_swap_file()}
\item Updates several parameters in the main file (such as paths, and output settings): \code{set_swap_output()}
\item Writes the new SWAP main file: \code{write_swp_file()}
\item Runs the new SWAP main file.
}

@seealso \code{\link[=run_swap_parallel]{run_swap_parallel()}}
}
