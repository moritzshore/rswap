remove.packages("rswap")
detach(name = "package:rswap", unload=TRUE)
remotes::install_github("moritzshore/rswap", upgrade = "ask")

library(rswap)
library(dplyr)
library(glue)

#TODO: maybe an automated system for testing every function at every case study?

project_path = "C:/Users/mosh/Documents/rswap_local/tetves"
swap_file = "swap.swp"
swap_exe = "C:/Users/mosh/Documents/rswap_local/swap.exe"

rswap::rswap_init(swap_exe)

run_swap(project_path, verbose = T)


projs <- list.files("C:/Users/mosh/Documents/rswap_local/", full.names = T)

projs<-projs[-(grepl(x=projs, ".exe") %>% which())]

sample(projs, 8)

for (project_path in sample(projs, 8)) {
  status <- run_swap(project_path, verbose = T, autoset_output = T)
  if(status != "100"){
    stop("FAILED at", project_path)
  }
}


status <-
  run_swap(
    project_path = "C:/Users/mosh/Documents/rswap_local/tetves",
    verbose = T,
    autoset_output = T
  )


modelled_data <- read_swap_output(project_path = project_path)

parse_swp_file(project_path, "swap.swp")


modelled_data$daily_output
modelled_data$custom_depth

observed_data <- load_observed(project_path)

observed_data$data
observed_data$observed_variables

get_depths(observed_data$data, variable = "WC")

plot_over_under(project_path,
                variable = "WC",
                depth = c(15, 40, 70))

soft_calibration_plot(project_path, vars = c("H", "WC", "DRAINAGE"))

run_swap(project_path, autoset_output = T)

get_performance(project_path)
get_performance(project_path, stat = "NSE")
get_performance(project_path, var = "WC")
get_performance(project_path, depth = 15)
get_performance(project_path, stat = "NSE", var = "WC")
get_performance(project_path, stat = "NSE", depth = 15)
get_performance(project_path,
                stat = "NSE",
                depth = 15,
                var = "WC")

save_run(project_path, "hi45")


comparative_plot(project_path, variable = "WC", depth = 15)


plot_statistics(
  project_path,
  var = "WC",
  stat = "PBIAS",
  depth = c(15, 40, 70),
  graph = "ggplot"
)

project_path = "C:/Users/mosh/Documents/rswap_local/tetves"
parsed <- parse_swp_file(project_path, swap_file = "swap.swp")
parameters <- change_swap_par(param = parsed$parameters, name = "COFRED", value = 0.55)
write_swap_file(parameters = parameters, table_path = parsed$table_path, outpath = paste0(project_path, "/modified.swp"))
parsed <- parse_swp_file(project_path, "modified.swp")
run_swap(project_path, "modified.swp",verbose = T )

save_run(project_path, "frank5")

plot_statistics(
  project_path,
  var = "WC",
  stat = "RMSE",
  depth = c(15, 40, 70),
  graph = "ggplot"
)

devtools::document()
roxygen2::roxygenise()
pkgdown::build_site()
